{"ast":null,"code":"var _jsxFileName = \"/Users/ecks/Desktop/gettrendy/gettrendy-frontend/src/components/Posts/PostDetail/comment/AddComment.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { useDispatch } from \"react-redux\";\nimport { createCommentAction } from \"../../../../redux/slices/comment/commentSlices\";\n\n//Form schema\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst formSchema = Yup.object({\n  description: Yup.string().required(\"Description is required\")\n});\nconst AddComment = _ref => {\n  _s();\n  let {\n    postId\n  } = _ref;\n  const dispatch = useDispatch();\n  const formik = useFormik({\n    initialValues: {\n      description: \"\"\n    },\n    onSubmit: async values => {\n      const data = {\n        postId,\n        description: values === null || values === void 0 ? void 0 : values.description\n      };\n      const result = await dispatch(createCommentAction(data));\n      if (result.payload.errors) {\n        formik.setErrors({\n          description: result.payload.message\n        });\n      } else {\n        formik.resetForm();\n      }\n    },\n    validationSchema: formSchema\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col justify-center items-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      className: \"mt-1 flex max-w-sm m-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onBlur: formik.handleBlur(\"description\"),\n        value: formik.values.description,\n        onChange: formik.handleChange(\"description\"),\n        type: \"text\",\n        name: \"text\",\n        id: \"text\",\n        className: \"shadow-sm focus:ring-indigo-500  mr-2 focus:border-indigo-500 block w-full p-2 border-1 sm:text-sm border-gray-300 rounded-md\",\n        placeholder: \"Add New comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"inline-flex items-center px-2.5 py-1.5 border border-transparent text-xs font-medium rounded shadow-sm text-white bg-pur-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-red-400 mb-2 mt-2\",\n      children: formik.touched.description && formik.errors.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(AddComment, \"snIeeAJX6ddd+yTscBhJ9TqRTSM=\", false, function () {\n  return [useDispatch, useFormik];\n});\n_c = AddComment;\nexport default AddComment;\nvar _c;\n$RefreshReg$(_c, \"AddComment\");","map":{"version":3,"names":["React","useFormik","Yup","useDispatch","createCommentAction","jsxDEV","_jsxDEV","formSchema","object","description","string","required","AddComment","_ref","_s","postId","dispatch","formik","initialValues","onSubmit","values","data","result","payload","errors","setErrors","message","resetForm","validationSchema","className","children","handleSubmit","onBlur","handleBlur","value","onChange","handleChange","type","name","id","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","touched","_c","$RefreshReg$"],"sources":["/Users/ecks/Desktop/gettrendy/gettrendy-frontend/src/components/Posts/PostDetail/comment/AddComment.js"],"sourcesContent":["import React from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { createCommentAction } from \"../../../../redux/slices/comment/commentSlices\";\r\n\r\n//Form schema\r\nconst formSchema = Yup.object({\r\n  description: Yup.string().required(\"Description is required\"),\r\n});\r\n\r\nconst AddComment = ({ postId }) => {\r\n  const dispatch = useDispatch();\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      description: \"\",\r\n    },\r\n    onSubmit: async (values) => {\r\n      const data = {\r\n        postId,\r\n        description: values?.description,\r\n      };\r\n      const result = await dispatch(createCommentAction(data));\r\n      if (result.payload.errors) {\r\n        formik.setErrors({ description: result.payload.message });\r\n      } else {\r\n        formik.resetForm();\r\n      }\r\n    },\r\n    validationSchema: formSchema,\r\n  });\r\n  return (\r\n    <div className='flex flex-col justify-center items-center'>\r\n      <form\r\n        onSubmit={formik.handleSubmit}\r\n        className='mt-1 flex max-w-sm m-auto'\r\n      >\r\n        <input\r\n          onBlur={formik.handleBlur(\"description\")}\r\n          value={formik.values.description}\r\n          onChange={formik.handleChange(\"description\")}\r\n          type='text'\r\n          name='text'\r\n          id='text'\r\n          className='shadow-sm focus:ring-indigo-500  mr-2 focus:border-indigo-500 block w-full p-2 border-1 sm:text-sm border-gray-300 rounded-md'\r\n          placeholder='Add New comment'\r\n        />\r\n\r\n        <button\r\n          type='submit'\r\n          className='inline-flex items-center px-2.5 py-1.5 border border-transparent text-xs font-medium rounded shadow-sm text-white bg-pur-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500'\r\n        >\r\n          Submit\r\n        </button>\r\n      </form>\r\n      <div className='text-red-400 mb-2 mt-2'>\r\n        {formik.touched.description && formik.errors.description}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddComment;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,QAAQ;AAClC,OAAO,KAAKC,GAAG,MAAM,KAAK;AAC1B,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,mBAAmB,QAAQ,gDAAgD;;AAEpF;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,UAAU,GAAGL,GAAG,CAACM,MAAM,CAAC;EAC5BC,WAAW,EAAEP,GAAG,CAACQ,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,yBAAyB;AAC9D,CAAC,CAAC;AAEF,MAAMC,UAAU,GAAGC,IAAA,IAAgB;EAAAC,EAAA;EAAA,IAAf;IAAEC;EAAO,CAAC,GAAAF,IAAA;EAC5B,MAAMG,QAAQ,GAAGb,WAAW,CAAC,CAAC;EAC9B,MAAMc,MAAM,GAAGhB,SAAS,CAAC;IACvBiB,aAAa,EAAE;MACbT,WAAW,EAAE;IACf,CAAC;IACDU,QAAQ,EAAE,MAAOC,MAAM,IAAK;MAC1B,MAAMC,IAAI,GAAG;QACXN,MAAM;QACNN,WAAW,EAAEW,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEX;MACvB,CAAC;MACD,MAAMa,MAAM,GAAG,MAAMN,QAAQ,CAACZ,mBAAmB,CAACiB,IAAI,CAAC,CAAC;MACxD,IAAIC,MAAM,CAACC,OAAO,CAACC,MAAM,EAAE;QACzBP,MAAM,CAACQ,SAAS,CAAC;UAAEhB,WAAW,EAAEa,MAAM,CAACC,OAAO,CAACG;QAAQ,CAAC,CAAC;MAC3D,CAAC,MAAM;QACLT,MAAM,CAACU,SAAS,CAAC,CAAC;MACpB;IACF,CAAC;IACDC,gBAAgB,EAAErB;EACpB,CAAC,CAAC;EACF,oBACED,OAAA;IAAKuB,SAAS,EAAC,2CAA2C;IAAAC,QAAA,gBACxDxB,OAAA;MACEa,QAAQ,EAAEF,MAAM,CAACc,YAAa;MAC9BF,SAAS,EAAC,2BAA2B;MAAAC,QAAA,gBAErCxB,OAAA;QACE0B,MAAM,EAAEf,MAAM,CAACgB,UAAU,CAAC,aAAa,CAAE;QACzCC,KAAK,EAAEjB,MAAM,CAACG,MAAM,CAACX,WAAY;QACjC0B,QAAQ,EAAElB,MAAM,CAACmB,YAAY,CAAC,aAAa,CAAE;QAC7CC,IAAI,EAAC,MAAM;QACXC,IAAI,EAAC,MAAM;QACXC,EAAE,EAAC,MAAM;QACTV,SAAS,EAAC,+HAA+H;QACzIW,WAAW,EAAC;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9B,CAAC,eAEFtC,OAAA;QACE+B,IAAI,EAAC,QAAQ;QACbR,SAAS,EAAC,4NAA4N;QAAAC,QAAA,EACvO;MAED;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eACPtC,OAAA;MAAKuB,SAAS,EAAC,wBAAwB;MAAAC,QAAA,EACpCb,MAAM,CAAC4B,OAAO,CAACpC,WAAW,IAAIQ,MAAM,CAACO,MAAM,CAACf;IAAW;MAAAgC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC9B,EAAA,CAjDIF,UAAU;EAAA,QACGT,WAAW,EACbF,SAAS;AAAA;AAAA6C,EAAA,GAFpBlC,UAAU;AAmDhB,eAAeA,UAAU;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}